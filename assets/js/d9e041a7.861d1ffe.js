"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[632],{6142:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>i,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"explorers/frenchgouv","title":"French Government Explorer","description":"The FrenchGouvCatExplorer class provides methods for exploring the French Government data catalogue.","source":"@site/docs/explorers/frenchgouv.md","sourceDirName":"explorers","slug":"/explorers/frenchgouv","permalink":"/herding-cats/docs/explorers/frenchgouv","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"OpenDataSoft Explorer","permalink":"/herding-cats/docs/explorers/opendatasoft"},"next":{"title":"ONS Nomis Explorer","permalink":"/herding-cats/docs/explorers/nomis"}}');var n=t(4848),o=t(8453);const s={sidebar_position:3},l="French Government Explorer",i={},d=[{value:"Creating a French Government Explorer",id:"creating-a-french-government-explorer",level:2},{value:"Available Methods",id:"available-methods",level:2},{value:"Basic Catalogue Information",id:"basic-catalogue-information",level:3},{value:"Dataset Discovery",id:"dataset-discovery",level:3},{value:"Dataset Details",id:"dataset-details",level:3},{value:"Resource Information",id:"resource-information",level:3},{value:"Example Workflow",id:"example-workflow",level:2}];function c(e){const a={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.header,{children:(0,n.jsx)(a.h1,{id:"french-government-explorer",children:"French Government Explorer"})}),"\n",(0,n.jsxs)(a.p,{children:["The ",(0,n.jsx)(a.code,{children:"FrenchGouvCatExplorer"})," class provides methods for exploring the French Government data catalogue."]}),"\n",(0,n.jsx)(a.h2,{id:"creating-a-french-government-explorer",children:"Creating a French Government Explorer"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-python",children:"import HerdingCats as hc\n\nwith hc.CatSession(hc.FrenchGouvCatalogue.GOUV_FR) as session:\n    explorer = hc.FrenchGouvCatExplorer(session)\n"})}),"\n",(0,n.jsx)(a.h2,{id:"available-methods",children:"Available Methods"}),"\n",(0,n.jsx)(a.h3,{id:"basic-catalogue-information",children:"Basic Catalogue Information"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-python",children:"# Check the health of the French Government data portal\nhealth = explorer.check_health_check()\n\n# Get all organizations in the catalogue\norgs = explorer.get_all_orgs()\n"})}),"\n",(0,n.jsx)(a.h3,{id:"dataset-discovery",children:"Dataset Discovery"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-python",children:"# Get all datasets\ndatasets = explorer.get_all_datasets()\n"})}),"\n",(0,n.jsx)(a.h3,{id:"dataset-details",children:"Dataset Details"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-python",children:'# Get metadata for a specific dataset\nmetadata = explorer.get_dataset_meta("dataset_id")\n\n# Get metadata as a dataframe\ndf_meta = explorer.get_dataset_meta_dataframe("dataset_id", df_type="pandas")\n\n# Fetch metadata for multiple datasets\nmulti_meta = explorer.get_multiple_datasets_meta(["dataset_id1", "dataset_id2"])\n'})}),"\n",(0,n.jsx)(a.h3,{id:"resource-information",children:"Resource Information"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-python",children:'# Get metadata for dataset resources\nresource_meta = explorer.get_dataset_resource_meta(metadata)\n\n# Get resource metadata as a dataframe\ndf_resource = explorer.get_dataset_resource_meta_dataframe(metadata, df_type="polars")\n'})}),"\n",(0,n.jsx)(a.h2,{id:"example-workflow",children:"Example Workflow"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-python",children:"import HerdingCats as hc\n\ndef main():\n    with hc.CatSession(hc.FrenchGouvCatalogue.GOUV_FR) as session:\n        explorer = hc.FrenchGouvCatExplorer(session)\n\n        # Get all datasets (limit results for example)\n        all_datasets = list(explorer.get_all_datasets().items())[:5]\n\n        # Print dataset IDs and titles\n        for dataset_id, dataset_info in all_datasets:\n            print(f\"ID: {dataset_id}, Title: {dataset_info.get('title', 'N/A')}\")\n\n        # Choose a dataset ID\n        if all_datasets:\n            dataset_id = all_datasets[0][0]\n\n            # Get dataset metadata\n            metadata = explorer.get_dataset_meta(dataset_id)\n\n            # Get resource metadata\n            resource_meta = explorer.get_dataset_resource_meta(metadata)\n\n            # Print available resources\n            print(\"\\nAvailable resources:\")\n            for resource in resource_meta:\n                format_type = resource.get('format', 'N/A')\n                url = resource.get('url', 'N/A')\n                print(f\"- Format: {format_type}, URL: {url}\")\n\n            # Create a loader and load a resource\n            loader = hc.FrenchGouvLoader()\n\n            # Choose a resource (e.g., the first one with a recognized format)\n            for resource in resource_meta:\n                format_type = resource.get('format', '').lower()\n                if format_type in [\"csv\", \"xlsx\", \"json\"]:\n                    df = loader.polars_data_loader(resource, format_type)\n                    print(f\"\\nLoaded {len(df)} rows of data in {format_type} format\")\n                    break\n\nif __name__ == \"__main__\":\n    main()\n"})})]})}function h(e={}){const{wrapper:a}={...(0,o.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,a,t)=>{t.d(a,{R:()=>s,x:()=>l});var r=t(6540);const n={},o=r.createContext(n);function s(e){const a=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function l(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),r.createElement(o.Provider,{value:a},e.children)}}}]);