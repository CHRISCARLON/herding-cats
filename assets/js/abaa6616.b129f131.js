"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[417],{568:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"explorers/ckan","title":"CKAN Explorer","description":"The CkanCatExplorer class provides methods for exploring CKAN-based data catalogues. CKAN (Comprehensive Knowledge Archive Network) is an open-source data management system used by many government and research organisations to publish and share data.","source":"@site/docs/explorers/ckan.md","sourceDirName":"explorers","slug":"/explorers/ckan","permalink":"/docs/explorers/ckan","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Supported Open Data Sources","permalink":"/docs/catalogues"},"next":{"title":"OpenDataSoft Explorer","permalink":"/docs/explorers/opendatasoft"}}');var s=r(4848),t=r(8453);const o={sidebar_position:1},i="CKAN Explorer",c={},l=[{value:"Creating a CKAN Explorer",id:"creating-a-ckan-explorer",level:2},{value:"Available Methods",id:"available-methods",level:2},{value:"Health Check",id:"health-check",level:3},{value:"Basic Catalogue Information",id:"basic-catalogue-information",level:3},{value:"Listing Packages",id:"listing-packages",level:3},{value:"Package Details and Search",id:"package-details-and-search",level:3},{value:"Working with DataFrames",id:"working-with-dataframes",level:3},{value:"Extracting Resource URLs",id:"extracting-resource-urls",level:3},{value:"Complete Example Workflow",id:"complete-example-workflow",level:2},{value:"Data Structure Considerations",id:"data-structure-considerations",level:2}];function d(e){const a={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.header,{children:(0,s.jsx)(a.h1,{id:"ckan-explorer",children:"CKAN Explorer"})}),"\n",(0,s.jsxs)(a.p,{children:["The ",(0,s.jsx)(a.code,{children:"CkanCatExplorer"})," class provides methods for exploring CKAN-based data catalogues. CKAN (Comprehensive Knowledge Archive Network) is an open-source data management system used by many government and research organisations to publish and share data."]}),"\n",(0,s.jsx)(a.h2,{id:"creating-a-ckan-explorer",children:"Creating a CKAN Explorer"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-python",children:"import HerdingCats as hc\n\n# Use a predefined catalogue from the library\nwith hc.CatSession(hc.CkanDataCatalogues.LONDON_DATA_STORE) as session:\n    explorer = hc.CkanCatExplorer(session)\n"})}),"\n",(0,s.jsx)(a.h2,{id:"available-methods",children:"Available Methods"}),"\n",(0,s.jsx)(a.h3,{id:"health-check",children:"Health Check"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-python",children:"# Check the health of the CKAN site\nexplorer.check_site_health()\n"})}),"\n",(0,s.jsx)(a.p,{children:"The health check will log success, warning, or error messages depending on the status of the CKAN site."}),"\n",(0,s.jsx)(a.h3,{id:"basic-catalogue-information",children:"Basic Catalogue Information"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-python",children:'# Get the total number of packages (datasets)\ncount = explorer.get_package_count()\n\n# Get a list of all organizations\norg_count, orgs = explorer.get_organisation_list()\nprint(f"Found {org_count} organizations")\n'})}),"\n",(0,s.jsx)(a.h3,{id:"listing-packages",children:"Listing Packages"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-python",children:'# Get a dictionary of all available packages\npackages = explorer.get_package_list()\n\n# Get a dataframe of all available packages\ndf = explorer.get_package_list_dataframe(df_type="pandas")  # or "polars"\n'})}),"\n",(0,s.jsx)(a.h3,{id:"package-details-and-search",children:"Package Details and Search"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-python",children:'# Get detailed information about a specific package\npackage_info = explorer.show_package_info("package_name")\n\n# Get package information as a dataframe\ndf_info = explorer.show_package_info_dataframe("package_name", df_type="pandas")\n\n# Search for packages with a keyword (limited to 10 results)\nresults = explorer.package_search("climate change", num_rows=10)\n\n# Get a condensed view of search results\ncondensed = explorer.package_search_condense("air quality", num_rows=5)\n'})}),"\n",(0,s.jsx)(a.h3,{id:"working-with-dataframes",children:"Working with DataFrames"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-python",children:'# Get search results as a dataframe with nested resources\ndf_search = explorer.package_search_condense_dataframe(\n    "population", num_rows=5, df_type="polars"\n)\n\n# Get search results as a dataframe with unpacked resources\n# This creates a flatter structure with one row per resource\ndf_search_unpacked = explorer.package_search_condense_dataframe_unpack(\n    "transport", num_rows=5, df_type="pandas"\n)\n'})}),"\n",(0,s.jsx)(a.p,{children:"The unpacked dataframe has the following structure:"}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsx)(a.li,{children:"Each dataset resource becomes a separate row"}),"\n",(0,s.jsxs)(a.li,{children:["Column prefixes like ",(0,s.jsx)(a.code,{children:"resource_name"}),", ",(0,s.jsx)(a.code,{children:"resource_created"}),", etc. are added"]}),"\n",(0,s.jsx)(a.li,{children:"This results in a larger dataframe but with easier access to individual resources"}),"\n"]}),"\n",(0,s.jsx)(a.h3,{id:"extracting-resource-urls",children:"Extracting Resource URLs"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-python",children:"# Extract resource URLs from package info for use with loaders\nresources = explorer.extract_resource_url(package_info)\n\n# Each resource contains [name, created_date, format, download_url]\nfor resource in enumerate(resources):\n    print(resource)\n"})}),"\n",(0,s.jsx)(a.h2,{id:"complete-example-workflow",children:"Complete Example Workflow"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-python",children:"TBC\n"})}),"\n",(0,s.jsx)(a.h2,{id:"data-structure-considerations",children:"Data Structure Considerations"}),"\n",(0,s.jsx)(a.p,{children:"When working with CKAN data, you'll encounter several important data structures:"}),"\n",(0,s.jsxs)(a.ol,{children:["\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.strong,{children:"Packages"})," - These are datasets containing one or more resources (data files)"]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.strong,{children:"Resources"})," - The actual data files within packages (CSV, JSON, Excel, etc.)"]}),"\n",(0,s.jsxs)(a.li,{children:[(0,s.jsx)(a.strong,{children:"Organizations"})," - Groups that publish and maintain datasets"]}),"\n"]}),"\n",(0,s.jsx)(a.p,{children:"The explorer offers different methods to access these structures in formats that are convenient for further processing, including:"}),"\n",(0,s.jsxs)(a.ul,{children:["\n",(0,s.jsx)(a.li,{children:"Raw dictionaries for direct access to all properties"}),"\n",(0,s.jsx)(a.li,{children:"Condensed views focusing on the most important metadata"}),"\n",(0,s.jsx)(a.li,{children:"Pandas or Polars dataframes for data analysis workflows"}),"\n",(0,s.jsx)(a.li,{children:"Nested or flattened (unpacked) resource structures"}),"\n"]}),"\n",(0,s.jsx)(a.p,{children:"Choose the appropriate method based on your specific needs and analysis workflow."})]})}function h(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,a,r)=>{r.d(a,{R:()=>o,x:()=>i});var n=r(6540);const s={},t=n.createContext(s);function o(e){const a=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function i(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),n.createElement(t.Provider,{value:a},e.children)}}}]);