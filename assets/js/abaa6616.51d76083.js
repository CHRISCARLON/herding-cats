"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[417],{568:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>i,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"explorers/ckan","title":"CKAN Explorer","description":"The CkanCatExplorer class provides methods for exploring CKAN-based data catalogues.","source":"@site/docs/explorers/ckan.md","sourceDirName":"explorers","slug":"/explorers/ckan","permalink":"/herding-cats/docs/explorers/ckan","draft":false,"unlisted":false,"editUrl":"https://github.com/chriscarlon/herding-cats/tree/main/docs/explorers/ckan.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Supported Catalogues","permalink":"/herding-cats/docs/catalogues"},"next":{"title":"OpenDataSoft Explorer","permalink":"/herding-cats/docs/explorers/opendatasoft"}}');var s=r(4848),t=r(8453);const o={sidebar_position:1},c="CKAN Explorer",i={},l=[{value:"Creating a CKAN Explorer",id:"creating-a-ckan-explorer",level:2},{value:"Available Methods",id:"available-methods",level:2},{value:"Basic Catalogue Information",id:"basic-catalogue-information",level:3},{value:"Listing Packages",id:"listing-packages",level:3},{value:"Package Details and Search",id:"package-details-and-search",level:3},{value:"Working with Resources",id:"working-with-resources",level:3},{value:"Example Workflow",id:"example-workflow",level:2}];function d(e){const a={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.header,{children:(0,s.jsx)(a.h1,{id:"ckan-explorer",children:"CKAN Explorer"})}),"\n",(0,s.jsxs)(a.p,{children:["The ",(0,s.jsx)(a.code,{children:"CkanCatExplorer"})," class provides methods for exploring CKAN-based data catalogues."]}),"\n",(0,s.jsx)(a.h2,{id:"creating-a-ckan-explorer",children:"Creating a CKAN Explorer"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-python",children:"import HerdingCats as hc\n\nwith hc.CatSession(hc.CkanDataCatalogues.LONDON_DATA_STORE) as session:\n    explorer = hc.CkanCatExplorer(session)\n"})}),"\n",(0,s.jsx)(a.h2,{id:"available-methods",children:"Available Methods"}),"\n",(0,s.jsx)(a.h3,{id:"basic-catalogue-information",children:"Basic Catalogue Information"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-python",children:"# Check the health of the CKAN site\nhealth = explorer.check_site_health()\n\n# Get the total number of packages\ncount = explorer.get_package_count()\n\n# Get a list of all organizations\norgs = explorer.get_organisation_list()\n"})}),"\n",(0,s.jsx)(a.h3,{id:"listing-packages",children:"Listing Packages"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-python",children:'# Get a dictionary of all available packages\npackages = explorer.get_package_list()\n\n# Get a dataframe of all available packages\ndf = explorer.get_package_list_dataframe(df_type="pandas")  # or "polars"\n\n# Get a list with extra package information\npackages_extra = explorer.get_package_list_extra()\n\n# Get a dataframe with extra package information\ndf_extra = explorer.get_package_list_dataframe_extra(df_type="polars")\n'})}),"\n",(0,s.jsx)(a.h3,{id:"package-details-and-search",children:"Package Details and Search"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-python",children:'# Get detailed information about a specific package\npackage_info = explorer.show_package_info("package_name")\n\n# Get package information as a dataframe\ndf_info = explorer.show_package_info_dataframe("package_name", df_type="pandas")\n\n# Search for packages\nresults = explorer.package_search("climate change", num_rows=10)\n\n# Get a condensed view of search results\ncondensed = explorer.package_search_condense("air quality", num_rows=5)\n\n# Get search results as a dataframe with packed resources\ndf_search = explorer.package_search_condense_dataframe("population", num_rows=5, df_type="polars")\n\n# Get search results as a dataframe with unpacked resources\ndf_search_unpacked = explorer.package_search_condense_dataframe_unpack("transport", num_rows=5, df_type="pandas")\n'})}),"\n",(0,s.jsx)(a.h3,{id:"working-with-resources",children:"Working with Resources"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-python",children:"# Extract resource URLs from package info for use with loaders\nresources = explorer.extract_resource_url(package_info)\n"})}),"\n",(0,s.jsx)(a.h2,{id:"example-workflow",children:"Example Workflow"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{className:"language-python",children:"import HerdingCats as hc\n\ndef main():\n    with hc.CatSession(hc.CkanDataCatalogues.UK_GOV_DATA) as session:\n        explorer = hc.CkanCatExplorer(session)\n\n        # Search for datasets about \"covid\"\n        results = explorer.package_search_condense(\"covid\", num_rows=5)\n\n        for i, result in enumerate(results):\n            print(f\"{i+1}. {result.get('title', 'N/A')}\")\n\n        # Let user select a dataset\n        selection = int(input(\"Select a dataset (number): \")) - 1\n        if 0 <= selection < len(results):\n            # Get detailed information\n            package_info = explorer.show_package_info(results[selection])\n\n            # Extract resources\n            resources = explorer.extract_resource_url(package_info)\n\n            # Print available resources\n            for i, resource in enumerate(resources):\n                print(f\"{i+1}. {resource.get('name', 'N/A')} ({resource.get('format', 'N/A')})\")\n\nif __name__ == \"__main__\":\n    main()\n"})})]})}function p(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,a,r)=>{r.d(a,{R:()=>o,x:()=>c});var n=r(6540);const s={},t=n.createContext(s);function o(e){const a=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function c(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),n.createElement(t.Provider,{value:a},e.children)}}}]);